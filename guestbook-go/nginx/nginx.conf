events {
  #
}

http {
  server {
    listen       80;
    server_name  localhost;

    # pass all traffic to Go app
    location / {
      access_log on;
      proxy_pass http://localhost:3000;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # serve index.html from nginx
    location /nginx {
       access_log on;
       rewrite  ^/nginx/(.*) /$1 break;
       root   /usr/share/nginx/html;
       index  index.html index.htm;
       try_files $uri $uri/index.html;
    }

    # Another method to pass traffic
    location /api {
      access_log on;
      proxy_pass http://example.com/;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Another method to pass traffic
    location ~ ^/(api2)/ {
      access_log on;
      # Use a variable so that nginx keeps resolving the hostname
      set $backend "example.com";

      proxy_pass http://$backend:80;
      proxy_set_header Real-IP $remote_addr;
      proxy_set_header Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header NginX-Proxy true;
      proxy_ssl_session_reuse off;
      proxy_redirect off;
    }

    # Example to redirect permanently
    rewrite ^(test.*) http://example.com/$1 permanent;

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
  }
}
